{
  "metadata": {
    "configurationVersions": [
      7
    ],
    "clusterVersion": "1.286.81.20240312-123702"
  },
  "id": "840f1b46-e6f0-4244-a376-6ef140e7caa8",
  "dashboardMetadata": {
    "name": "TxMA Shared Signals ",
    "shared": true,
    "owner": "mina.mahdi@digital.cabinet-office.gov.uk",
    "popularity": 3,
    "hasConsistentColors": false
  },
  "tiles": [
    {
      "name": "Api Gateway Count & Errors",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 76,
        "left": 0,
        "width": 684,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "A",
          "metric": "ext:cloud.aws.apiGateway.countSum",
          "spaceAggregation": "SUM",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "sortBy": "DESC",
          "sortByDimension": "",
          "filterBy": {
            "filterOperator": "AND",
            "nestedFilters": [
              {
                "filter": "dt.entity.custom_device",
                "filterType": "NAME",
                "filterOperator": "OR",
                "entityAttribute": "entityName",
                "nestedFilters": [],
                "criteria": [
                  {
                    "value": "shared-signals-shared-signals-api-endpoint",
                    "evaluator": "IN",
                    "matchExactly": false
                  }
                ]
              }
            ],
            "criteria": []
          },
          "limit": 20,
          "rate": "NONE",
          "enabled": true
        },
        {
          "id": "B",
          "metric": "ext:cloud.aws.apiGateway.4xxErrorSum",
          "spaceAggregation": "SUM",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "sortBy": "DESC",
          "sortByDimension": "",
          "filterBy": {
            "filterOperator": "AND",
            "nestedFilters": [
              {
                "filter": "dt.entity.custom_device",
                "filterType": "NAME",
                "filterOperator": "OR",
                "entityAttribute": "entityName",
                "nestedFilters": [],
                "criteria": [
                  {
                    "value": "shared-signals-shared-signals-api-endpoint",
                    "evaluator": "IN",
                    "matchExactly": true
                  }
                ]
              }
            ],
            "criteria": []
          },
          "limit": 20,
          "rate": "NONE",
          "enabled": true
        },
        {
          "id": "C",
          "metric": "ext:cloud.aws.apiGateway.5xxErrorSum",
          "spaceAggregation": "SUM",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "sortBy": "DESC",
          "sortByDimension": "",
          "filterBy": {
            "filterOperator": "AND",
            "nestedFilters": [
              {
                "filter": "dt.entity.custom_device",
                "filterType": "NAME",
                "filterOperator": "OR",
                "entityAttribute": "entityName",
                "nestedFilters": [],
                "criteria": [
                  {
                    "value": "shared-signals-shared-signals-api-endpoint",
                    "evaluator": "IN",
                    "matchExactly": true
                  }
                ]
              }
            ],
            "criteria": []
          },
          "limit": 20,
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "GRAPH_CHART",
        "global": {},
        "rules": [
          {
            "matcher": "A:",
            "unitTransform": "none",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE"
            },
            "seriesOverrides": []
          },
          {
            "matcher": "B:",
            "unitTransform": "none",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE"
            },
            "seriesOverrides": []
          },
          {
            "matcher": "C:",
            "unitTransform": "none",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "displayName": "",
            "visible": true
          },
          "yAxes": [
            {
              "displayName": "",
              "visible": true,
              "min": "AUTO",
              "max": "AUTO",
              "position": "LEFT",
              "queryIds": [
                "A",
                "B",
                "C"
              ],
              "defaultAxis": true
            }
          ]
        },
        "heatmapSettings": {
          "yAxis": "VALUE"
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": []
        },
        "graphChartSettings": {
          "connectNulls": true
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": "1m"
      },
      "metricExpressions": [
        "resolution=1m&(ext:cloud.aws.apiGateway.countSum:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName(~\"shared-signals-shared-signals-api-endpoint~\")\"))))):splitBy(\"dt.entity.custom_device\"):sum:sort(value(sum,descending)):limit(20)):limit(100):names,(ext:cloud.aws.apiGateway.\"4xxErrorSum\":filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.equals(~\"shared-signals-shared-signals-api-endpoint~\")\"))))):splitBy(\"dt.entity.custom_device\"):sum:sort(value(sum,descending)):limit(20)):limit(100):names,(ext:cloud.aws.apiGateway.\"5xxErrorSum\":filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.equals(~\"shared-signals-shared-signals-api-endpoint~\")\"))))):splitBy(\"dt.entity.custom_device\"):sum:sort(value(sum,descending)):limit(20)):limit(100):names"
      ]
    },
    {
      "name": "Shared Signals",
      "tileType": "HEADER",
      "configured": true,
      "bounds": {
        "top": 38,
        "left": 0,
        "width": 304,
        "height": 38
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false
    },
    {
      "name": "Concurrent Executions",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 380,
        "left": 684,
        "width": 646,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "D",
          "metric": "builtin:cloud.aws.lambda.concExecutions",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.aws_lambda_function"
          ],
          "sortBy": "DESC",
          "sortByDimension": "",
          "filterBy": {
            "filterOperator": "AND",
            "nestedFilters": [
              {
                "filter": "dt.entity.aws_lambda_function",
                "filterType": "NAME",
                "filterOperator": "OR",
                "entityAttribute": "entityName",
                "nestedFilters": [],
                "criteria": [
                  {
                    "value": "shared-signals-create-sets",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-push-events-to-receiver",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-provision-user-stack",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-retry-write-to-set-push-queue",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-write-to-set-push-queue",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-mock-receiver-function",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-get-user",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-mock-receiver-oauth-function",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-mock-access-token-function",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-delete-user-resources",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-update-user-config-entry",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-get-jwks-function",
                    "evaluator": "IN",
                    "matchExactly": true
                  }
                ]
              }
            ],
            "criteria": []
          },
          "limit": 20,
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "GRAPH_CHART",
        "global": {},
        "rules": [
          {
            "matcher": "D:",
            "unitTransform": "auto",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "displayName": "",
            "visible": true
          },
          "yAxes": [
            {
              "displayName": "",
              "visible": true,
              "min": "AUTO",
              "max": "AUTO",
              "position": "LEFT",
              "queryIds": [
                "D"
              ],
              "defaultAxis": true
            }
          ]
        },
        "heatmapSettings": {
          "yAxis": "VALUE",
          "showLabels": false
        },
        "singleValueSettings": {
          "showTrend": true,
          "showSparkLine": true,
          "linkTileColorToThreshold": true
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": []
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=null&(builtin:cloud.aws.lambda.concExecutions:filter(and(or(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-mock-receiver-oauth-function~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-mock-access-token-function~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-create-sets~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-provision-user-stack~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-update-user-config-entry~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-mock-receiver-function~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-get-user~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-push-events-to-receiver~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-write-to-set-push-queue~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-get-jwks-function~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-retry-write-to-set-push-queue~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-delete-user-resources~\")\"))))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):limit(20)):limit(100):names"
      ]
    },
    {
      "name": "Duration",
      "nameSize": "",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 380,
        "left": 0,
        "width": 684,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "B",
          "metric": "builtin:cloud.aws.lambda.duration",
          "spaceAggregation": "SUM",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.aws_lambda_function"
          ],
          "sortBy": "DESC",
          "sortByDimension": "",
          "filterBy": {
            "filterOperator": "AND",
            "nestedFilters": [
              {
                "filter": "dt.entity.aws_lambda_function",
                "filterType": "NAME",
                "filterOperator": "OR",
                "entityAttribute": "entityName",
                "nestedFilters": [],
                "criteria": [
                  {
                    "value": "shared-signals-get-user",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-mock-access-token-function",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-retry-write-to-set-push-queue",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-update-user-config-entry",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-push-events-to-receiver",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-provision-user-stack",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-write-to-set-push-queue",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-get-jwks-function",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-delete-user-resources",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-mock-receiver-oauth-function",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-mock-receiver-function",
                    "evaluator": "IN",
                    "matchExactly": true
                  },
                  {
                    "value": "shared-signals-create-sets",
                    "evaluator": "IN",
                    "matchExactly": true
                  }
                ]
              }
            ],
            "criteria": []
          },
          "limit": 20,
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "GRAPH_CHART",
        "global": {
          "hideLegend": false
        },
        "rules": [
          {
            "matcher": "B:",
            "properties": {
              "color": "DEFAULT"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "displayName": "",
            "visible": true
          },
          "yAxes": [
            {
              "displayName": "",
              "visible": true,
              "min": "AUTO",
              "max": "AUTO",
              "position": "LEFT",
              "queryIds": [
                "B"
              ],
              "defaultAxis": true
            }
          ]
        },
        "heatmapSettings": {
          "yAxis": "VALUE",
          "showLabels": false
        },
        "singleValueSettings": {
          "showTrend": true,
          "showSparkLine": true,
          "linkTileColorToThreshold": true
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "queryId": "",
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": []
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=null&(builtin:cloud.aws.lambda.duration:filter(and(or(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-mock-receiver-oauth-function~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-mock-access-token-function~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-provision-user-stack~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-create-sets~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-update-user-config-entry~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-mock-receiver-function~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-get-user~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-push-events-to-receiver~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-write-to-set-push-queue~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-get-jwks-function~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-retry-write-to-set-push-queue~\")\")),in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.equals(~\"shared-signals-delete-user-resources~\")\"))))):splitBy(\"dt.entity.aws_lambda_function\"):sum:sort(value(sum,descending)):limit(20)):limit(100):names"
      ]
    },
    {
      "name": "Invocations",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 684,
        "left": 684,
        "width": 646,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Table",
      "queries": [
        {
          "id": "A",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.aws_lambda_function"
          ],
          "metricSelector": "builtin:cloud.aws.lambda.invocations:filter(and(or(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):limit(20)",
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "TABLE",
        "global": {},
        "rules": [
          {
            "matcher": "A:",
            "properties": {
              "color": "DEFAULT"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "visible": true
          },
          "yAxes": []
        },
        "heatmapSettings": {
          "yAxis": "VALUE"
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "columnId": "LambdaFunction number of times a function is invoked",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "queryId": "A",
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": [
            "A:dt.entity.aws_lambda_function.name"
          ]
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=Inf&(builtin:cloud.aws.lambda.invocations:filter(and(or(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):limit(20)):names"
      ]
    },
    {
      "name": "SQS Age of Oldest Message & Number of Messages sent",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 1292,
        "left": 0,
        "width": 684,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "A",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "metricSelector": "ext:cloud.aws.sqs.approximateAgeOfOldestMessage:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.custom_device\"):sort(value(auto,descending)):limit(20)",
          "rate": "NONE",
          "enabled": true
        },
        {
          "id": "B",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "metricSelector": "ext:cloud.aws.sqs.numberOfMessagesSentSum:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.custom_device\"):sort(value(auto,descending)):limit(20)",
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "TABLE",
        "global": {},
        "rules": [
          {
            "matcher": "A:",
            "properties": {
              "color": "DEFAULT"
            },
            "seriesOverrides": []
          },
          {
            "matcher": "B:",
            "properties": {
              "color": "DEFAULT"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "visible": true
          },
          "yAxes": []
        },
        "heatmapSettings": {
          "yAxis": "VALUE",
          "showLabels": false
        },
        "singleValueSettings": {
          "showTrend": true,
          "showSparkLine": true,
          "linkTileColorToThreshold": true
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "columnId": "ApproximateAgeOfOldestMessage",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "queryId": "A",
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": [
            "A:dt.entity.custom_device.name",
            "B:dt.entity.custom_device.name"
          ]
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=Inf&(ext:cloud.aws.sqs.approximateAgeOfOldestMessage:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.custom_device\"):sort(value(auto,descending)):limit(20)):names,(ext:cloud.aws.sqs.numberOfMessagesSentSum:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.custom_device\"):sort(value(auto,descending)):limit(20)):names"
      ]
    },
    {
      "name": "SQS Dynamic Queues",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 1292,
        "left": 684,
        "width": 646,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "A",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "metricSelector": "ext:cloud.aws.sqs.approximateAgeOfOldestMessage:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.contains(~\"txma-dynamic-sqs-set-push-queue~\")\"))))):splitBy(\"dt.entity.custom_device\"):sort(value(auto,descending)):limit(20)",
          "rate": "NONE",
          "enabled": true
        },
        {
          "id": "B",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "metricSelector": "ext:cloud.aws.sqs.approximateNumberOfMessagesNotVisibleSum:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.contains(~\"txma-dynamic-sqs-set-push-queue~\")\"))))):splitBy(\"dt.entity.custom_device\"):sort(value(auto,descending)):limit(20)",
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "TABLE",
        "global": {},
        "rules": [
          {
            "matcher": "A:",
            "unitTransform": "auto",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "Age - Queue"
            },
            "seriesOverrides": []
          },
          {
            "matcher": "B:",
            "properties": {
              "color": "DEFAULT"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "visible": true
          },
          "yAxes": []
        },
        "heatmapSettings": {
          "yAxis": "VALUE",
          "showLabels": false
        },
        "singleValueSettings": {
          "showTrend": true,
          "showSparkLine": true,
          "linkTileColorToThreshold": true
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "columnId": "ApproximateAgeOfOldestMessage",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "queryId": "A",
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": [
            "A:dt.entity.custom_device.name",
            "B:dt.entity.custom_device.name"
          ]
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=Inf&(ext:cloud.aws.sqs.approximateAgeOfOldestMessage:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.contains(~\"txma-dynamic-sqs-set-push-queue~\")\"))))):splitBy(\"dt.entity.custom_device\"):sort(value(auto,descending)):limit(20)):names,(ext:cloud.aws.sqs.approximateNumberOfMessagesNotVisibleSum:filter(and(or(in(\"dt.entity.custom_device\",entitySelector(\"type(custom_device),entityName.contains(~\"txma-dynamic-sqs-set-push-queue~\")\"))))):splitBy(\"dt.entity.custom_device\"):sort(value(auto,descending)):limit(20)):names"
      ]
    },
    {
      "name": "API Latency",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 76,
        "left": 684,
        "width": 646,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "A",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "metricSelector": "ext:cloud.aws.apiGateway.latency:filter(in(\"dt.entity.custom_device\", entitySelector(\"type(~\"CUSTOM_DEVICE~\"), entityName.contains(~\"shared-signals-~\")\"))):splitBy(\"dt.entity.custom_device\"):fold(min)",
          "rate": "NONE",
          "enabled": true
        },
        {
          "id": "B",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "metricSelector": "ext:cloud.aws.apiGateway.latency:filter(in(\"dt.entity.custom_device\", entitySelector(\"type(~\"CUSTOM_DEVICE~\"), entityName.contains(~\"shared-signals-~\")\"))):splitBy(\"dt.entity.custom_device\"):fold(avg)",
          "rate": "NONE",
          "enabled": true
        },
        {
          "id": "C",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.custom_device"
          ],
          "metricSelector": "ext:cloud.aws.apiGateway.latency:filter(in(\"dt.entity.custom_device\", entitySelector(\"type(~\"CUSTOM_DEVICE~\"), entityName.contains(~\"shared-signals-~\")\"))):splitBy(\"dt.entity.custom_device\"):fold(max)",
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "TABLE",
        "global": {},
        "rules": [
          {
            "matcher": "A:",
            "unitTransform": "MilliSecond",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "Min"
            },
            "seriesOverrides": []
          },
          {
            "matcher": "B:",
            "unitTransform": "MilliSecond",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "Avg"
            },
            "seriesOverrides": []
          },
          {
            "matcher": "C:",
            "unitTransform": "MilliSecond",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "Max"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "visible": true
          },
          "yAxes": []
        },
        "heatmapSettings": {
          "yAxis": "VALUE"
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "columnId": "Latency",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "queryId": "A",
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": [
            "A:dt.entity.custom_device.name",
            "B:dt.entity.custom_device.name",
            "C:dt.entity.custom_device.name"
          ]
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=null&(ext:cloud.aws.apiGateway.latency:filter(in(\"dt.entity.custom_device\",entitySelector(\"type(~\"CUSTOM_DEVICE~\"), entityName.contains(~\"shared-signals-~\")\"))):splitBy(\"dt.entity.custom_device\"):fold(min)):names:fold(auto),(ext:cloud.aws.apiGateway.latency:filter(in(\"dt.entity.custom_device\",entitySelector(\"type(~\"CUSTOM_DEVICE~\"), entityName.contains(~\"shared-signals-~\")\"))):splitBy(\"dt.entity.custom_device\"):fold(avg)):names:fold(auto),(ext:cloud.aws.apiGateway.latency:filter(in(\"dt.entity.custom_device\",entitySelector(\"type(~\"CUSTOM_DEVICE~\"), entityName.contains(~\"shared-signals-~\")\"))):splitBy(\"dt.entity.custom_device\"):fold(max)):names:fold(auto)"
      ]
    },
    {
      "name": "DynamoDB Latency",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 1596,
        "left": 0,
        "width": 684,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "A",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "Operation"
          ],
          "metricSelector": "builtin:cloud.aws.dynamo.requests.latency:filter(in(\"dt.entity.dynamo_db_table\", entitySelector(\"type(~\"DYNAMO_DB_TABLE~\"), entityName.contains(~\"shared-signals-infra-user-config~\")\"))):splitBy(\"Operation\"):fold(min)",
          "rate": "NONE",
          "enabled": true
        },
        {
          "id": "B",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "Operation"
          ],
          "metricSelector": "builtin:cloud.aws.dynamo.requests.latency:filter(in(\"dt.entity.dynamo_db_table\", entitySelector(\"type(~\"DYNAMO_DB_TABLE~\"), entityName.contains(~\"shared-signals-infra-user-config~\")\"))):splitBy(\"Operation\"):fold(avg)",
          "rate": "NONE",
          "enabled": true
        },
        {
          "id": "C",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "Operation"
          ],
          "metricSelector": "builtin:cloud.aws.dynamo.requests.latency:filter(in(\"dt.entity.dynamo_db_table\", entitySelector(\"type(~\"DYNAMO_DB_TABLE~\"), entityName.contains(~\"shared-signals-infra-user-config~\")\"))):splitBy(\"Operation\"):fold(max)",
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "TABLE",
        "global": {},
        "rules": [
          {
            "matcher": "A:",
            "unitTransform": "MilliSecond",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "Min"
            },
            "seriesOverrides": []
          },
          {
            "matcher": "B:",
            "unitTransform": "MilliSecond",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "Avg"
            },
            "seriesOverrides": []
          },
          {
            "matcher": "C:",
            "unitTransform": "MilliSecond",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "Max"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "visible": true
          },
          "yAxes": []
        },
        "heatmapSettings": {
          "yAxis": "VALUE",
          "showLabels": false
        },
        "singleValueSettings": {
          "showTrend": true,
          "showSparkLine": true,
          "linkTileColorToThreshold": true
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "columnId": "DynamoDB number of successful request latency for operation",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "queryId": "A",
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": [
            "A:Operation.name",
            "B:Operation.name",
            "C:Operation.name",
            "D:Operation.name",
            "E:Operation.name"
          ]
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=null&(builtin:cloud.aws.dynamo.requests.latency:filter(in(\"dt.entity.dynamo_db_table\",entitySelector(\"type(~\"DYNAMO_DB_TABLE~\"), entityName.contains(~\"shared-signals-infra-user-config~\")\"))):splitBy(Operation):fold(min)):names:fold(auto),(builtin:cloud.aws.dynamo.requests.latency:filter(in(\"dt.entity.dynamo_db_table\",entitySelector(\"type(~\"DYNAMO_DB_TABLE~\"), entityName.contains(~\"shared-signals-infra-user-config~\")\"))):splitBy(Operation):fold(avg)):names:fold(auto),(builtin:cloud.aws.dynamo.requests.latency:filter(in(\"dt.entity.dynamo_db_table\",entitySelector(\"type(~\"DYNAMO_DB_TABLE~\"), entityName.contains(~\"shared-signals-infra-user-config~\")\"))):splitBy(Operation):fold(max)):names:fold(auto)"
      ]
    },
    {
      "name": "Throttled",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 684,
        "left": 0,
        "width": 684,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Table",
      "queries": [
        {
          "id": "A",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.aws_lambda_function"
          ],
          "metricSelector": "builtin:cloud.aws.lambda.throttlers:filter(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(AWS_LAMBDA_FUNCTION),entityName.contains(~\"shared-signals~\")\"))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):max:limit(100)",
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "TABLE",
        "global": {},
        "rules": [
          {
            "matcher": "A:",
            "unitTransform": "auto",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "Throttled"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "visible": true
          },
          "yAxes": []
        },
        "heatmapSettings": {
          "yAxis": "VALUE"
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "columnId": "LambdaFunction throttled function invocation count",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "queryId": "A",
            "visible": true
          }
        ],
        "tableSettings": {
          "isThresholdBackgroundAppliedToCell": false,
          "hiddenColumns": [
            "A:dt.entity.service.name",
            "A:dt.entity.aws_lambda_function.name"
          ]
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=Inf&(builtin:cloud.aws.lambda.throttlers:filter(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(AWS_LAMBDA_FUNCTION),entityName.contains(~\"shared-signals~\")\"))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):max:limit(100)):names"
      ]
    },
    {
      "name": "Lambda Error Rate",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 988,
        "left": 684,
        "width": 646,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "B",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.aws_lambda_function"
          ],
          "metricSelector": "builtin:cloud.aws.lambda.errorsRate:filter(and(or(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):limit(20)",
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "GRAPH_CHART",
        "global": {},
        "rules": [
          {
            "matcher": "B:",
            "unitTransform": "auto",
            "valueFormat": "auto",
            "properties": {
              "color": "DEFAULT",
              "seriesType": "LINE",
              "alias": "LambdaFunction rate of failed invocations to all invocations %"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "displayName": "",
            "visible": true
          },
          "yAxes": [
            {
              "displayName": "",
              "visible": true,
              "min": "AUTO",
              "max": "AUTO",
              "position": "LEFT",
              "queryIds": [
                "B"
              ],
              "defaultAxis": true
            }
          ]
        },
        "heatmapSettings": {
          "yAxis": "VALUE"
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": []
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=null&(builtin:cloud.aws.lambda.errorsRate:filter(and(or(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):limit(20)):limit(100):names"
      ]
    },
    {
      "name": "Lambda Errors",
      "tileType": "DATA_EXPLORER",
      "configured": true,
      "bounds": {
        "top": 988,
        "left": 0,
        "width": 684,
        "height": 304
      },
      "tileFilter": {},
      "isAutoRefreshDisabled": false,
      "customName": "Data explorer results",
      "queries": [
        {
          "id": "A",
          "spaceAggregation": "AUTO",
          "timeAggregation": "DEFAULT",
          "splitBy": [
            "dt.entity.aws_lambda_function"
          ],
          "metricSelector": "builtin:cloud.aws.lambda.errors:filter(and(or(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):limit(20)",
          "rate": "NONE",
          "enabled": true
        }
      ],
      "visualConfig": {
        "type": "TOP_LIST",
        "global": {},
        "rules": [
          {
            "matcher": "A:",
            "properties": {
              "color": "DEFAULT"
            },
            "seriesOverrides": []
          }
        ],
        "axes": {
          "xAxis": {
            "visible": true
          },
          "yAxes": []
        },
        "heatmapSettings": {
          "yAxis": "VALUE"
        },
        "thresholds": [
          {
            "axisTarget": "LEFT",
            "rules": [
              {
                "color": "#7dc540"
              },
              {
                "color": "#f5d30f"
              },
              {
                "color": "#dc172a"
              }
            ],
            "visible": true
          }
        ],
        "tableSettings": {
          "hiddenColumns": []
        },
        "graphChartSettings": {
          "connectNulls": false
        },
        "honeycombSettings": {
          "showHive": true,
          "showLegend": true,
          "showLabels": false
        }
      },
      "queriesSettings": {
        "resolution": ""
      },
      "metricExpressions": [
        "resolution=Inf&(builtin:cloud.aws.lambda.errors:filter(and(or(in(\"dt.entity.aws_lambda_function\",entitySelector(\"type(aws_lambda_function),entityName.contains(~\"shared-signals~\")\"))))):splitBy(\"dt.entity.aws_lambda_function\"):sort(value(auto,descending)):limit(20)):limit(100):names"
      ]
    }
  ]
}